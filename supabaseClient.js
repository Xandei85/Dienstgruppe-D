let sb=null;(function(){const{SUPABASE_URL,SUPABASE_ANON_KEY}=window.APP_CONFIG||{};if(SUPABASE_URL&&SUPABASE_ANON_KEY)sb={url:SUPABASE_URL,key:SUPABASE_ANON_KEY};})();
function kE(y,m){return`sp:entries:${y}:${m}`}function kR(y,m){return`sp:remarks:${y}:${m}`}function kD(y,m){return`sp:dayremarks:${y}:${m}`}
function lsSaveEntry({year,month,day,name,value}){const k=kE(year,month);const a=JSON.parse(localStorage.getItem(k)||"[]");const i=a.findIndex(r=>r.day===day&&r.name===name);if(i>=0)a[i].value=value;else a.push({year,month,day,name,value});localStorage.setItem(k,JSON.stringify(a));return Promise.resolve(a)}
function lsLoadMonth({year,month}){return Promise.resolve(JSON.parse(localStorage.getItem(kE(year,month))||"[]"))}
function lsSaveRemarks({year,month,remarks}){localStorage.setItem(kR(year,month),remarks||"");return Promise.resolve(true)}
function lsLoadRemarks({year,month}){return Promise.resolve(localStorage.getItem(kR(year,month))||"")}
function lsSaveDayRemark({year,month,day,text}){const k=kD(year,month);const m=JSON.parse(localStorage.getItem(k)||"{}");m[day]=text||"";localStorage.setItem(k,JSON.stringify(m));return Promise.resolve(true)}
function lsLoadDayRemarks({year,month}){return Promise.resolve(JSON.parse(localStorage.getItem(kD(year,month))||"{}"))}
async function saveCell({year,month,day,name,value}){if(!sb)return lsSaveEntry({year,month,day,name,value});const p={year,month,day,name,value};const r=await fetch(`${sb.url}/rest/v1/entries`,{method:'POST',headers:{'apikey':sb.key,'Authorization':`Bearer ${sb.key}`,'Content-Type':'application/json','Prefer':'return=representation'},body:JSON.stringify(p)});if(!r.ok)throw new Error(await r.text());return r.json()}
async function loadMonth({year,month}){if(!sb)return lsLoadMonth({year,month});const u=new URL(`${sb.url}/rest/v1/entries`);u.searchParams.set('year','eq.'+year);u.searchParams.set('month','eq.'+month);u.searchParams.set('select','*');const r=await fetch(u,{headers:{'apikey':sb.key,'Authorization':`Bearer ${sb.key}`}});if(!r.ok)throw new Error(await r.text());return r.json()}
async function saveRemarks({year,month,remarks}){if(!sb)return lsSaveRemarks({year,month,remarks});const p={year,month,remarks};const r=await fetch(`${sb.url}/rest/v1/remarks`,{method:'POST',headers:{'apikey':sb.key,'Authorization':`Bearer ${sb.key}`,'Content-Type':'application/json','Prefer':'return=representation'},body:JSON.stringify(p)});if(!r.ok)throw new Error(await r.text());return r.json()}
async function loadRemarks({year,month}){if(!sb)return lsLoadRemarks({year,month});const u=new URL(`${sb.url}/rest/v1/remarks`);u.searchParams.set('year','eq.'+year);u.searchParams.set('month','eq.'+month);u.searchParams.set('select','remarks');const r=await fetch(u,{headers:{'apikey':sb.key,'Authorization':`Bearer ${sb.key}`}});if(!r.ok)throw new Error(await r.text());const a=await r.json();return a.length?a[0].remarks:""}
async function saveDayRemark({year,month,day,text}){if(!sb)return lsSaveDayRemark({year,month,day,text});const p={year,month,day,text};const r=await fetch(`${sb.url}/rest/v1/remarks_day`,{method:'POST',headers:{'apikey':sb.key,'Authorization':`Bearer ${sb.key}`,'Content-Type':'application/json','Prefer':'return=representation'},body:JSON.stringify(p)});if(!r.ok)throw new Error(await r.text());return r.json()}
async function loadDayRemarks({year,month}){if(!sb)return lsLoadDayRemarks({year,month});const u=new URL(`${sb.url}/rest/v1/remarks_day`);u.searchParams.set('year','eq.'+year);u.searchParams.set('month','eq.'+month);u.searchParams.set('select','day,text');const r=await fetch(u,{headers:{'apikey':sb.key,'Authorization':`Bearer ${sb.key}`}});if(!r.ok)throw new Error(await r.text());const a=await r.json();const m={};a.forEach(r=>m[r.day]=r.text);return m}