const NAMES=window.APP_CONFIG.NAMES;const YEAR_START=window.APP_CONFIG.YEAR_START;const YEAR_END=window.APP_CONFIG.YEAR_END;const MONTHS_DE=['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'];const WD=['Mo','Di','Mi','Do','Fr','Sa','So'];
const schoolRanges=[[new Date(2026,0,1),new Date(2026,0,5)],[new Date(2026,1,16),new Date(2026,1,20)],[new Date(2026,2,30),new Date(2026,3,10)],[new Date(2026,4,26),new Date(2026,5,5)],[new Date(2026,7,3),new Date(2026,8,14)],[new Date(2026,10,2),new Date(2026,10,6)],[new Date(2026,10,18),new Date(2026,10,18)]];
function inHolidays(d){return schoolRanges.some(([a,b])=>d>=a&&d<=b)}
function isWorkday(d){const s=(window.APP_CONFIG&&window.APP_CONFIG.START_PATTERN_DATE)||'2026-01-02';const sh=(window.APP_CONFIG&&(window.APP_CONFIG.PATTERN_SHIFT|0))||0;const [sy,sm,sd]=s.split('-').map(n=>parseInt(n,10));const startUTC=Date.UTC(sy,sm-1,sd);const curUTC=Date.UTC(d.getFullYear(),d.getMonth(),d.getDate());if(curUTC<startUTC)return false;const delta=Math.floor((curUTC-startUTC)/86400000);const mod=(delta+sh)%4;return mod===0||mod===1}
const monthTitle=document.getElementById('monthTitle');const gridEl=document.getElementById('grid');const monthSelect=document.getElementById('monthSelect');const yearSelect=document.getElementById('yearSelect');const prevBtn=document.getElementById('prevMonth');const nextBtn=document.getElementById('nextMonth');const remarksTA=document.getElementById('monthlyRemarks');const saveRemarksBtn=document.getElementById('saveRemarks');const toastEl=document.getElementById('toast');const meSelect=document.getElementById('meSelect');
NAMES.forEach(n=>{const o=document.createElement('option');o.value=n;o.textContent=n;meSelect.appendChild(o)});let myName=NAMES[0];meSelect.value=myName;meSelect.addEventListener('change',()=>{myName=meSelect.value});
let curYear=YEAR_START,curMonth=0,selectedCode=null,isPainting=false;function toast(m){toastEl.textContent=m;toastEl.classList.add('show');setTimeout(()=>toastEl.classList.remove('show'),1200)}
function render(){selectedCode=null;document.querySelectorAll('.legend-btn').forEach(b=>b.classList.remove('active'));monthTitle.textContent=`${MONTHS_DE[curMonth]} ${curYear}`;const days=new Date(curYear,curMonth+1,0).getDate();let html='<table><thead><tr>';html+='<th class="name">Name</th>';for(let d=1;d<=days;d++){const dt=new Date(curYear,curMonth,d);const wd=dt.getDay();const wdIdx=(wd+6)%7;const isSa=wdIdx===5,isSo=wdIdx===6;const dayClasses=[];if(inHolidays(dt))dayClasses.push('ferienday');html+=`<th class="${dayClasses.join(' ')}"><div class="daynum">${d}</div><div class="weekday ${isSa?'sat':isSo?'sun':''}">${WD[wdIdx]}</div></th>`}html+='</tr></thead><tbody>';html+='<tr class="day-remarks"><td class="name">Bemerkungen (Tag)</td>';for(let d=1;d<=days;d++){html+=`<td class="day-remark-cell" data-day="${d}"></td>`}html+='</tr>';NAMES.forEach(name=>{html+=`<tr><td class="name">${name}</td>`;for(let d=1;d<=days;d++){const dt=new Date(curYear,curMonth,d);const cls=isWorkday(dt)?'yellow':'';html+=`<td class="editable ${cls}" contenteditable data-name="${name}" data-day="${d}"></td>`}html+='</tr>'});html+='</tbody></table>';gridEl.innerHTML=html;
loadMonth({year:curYear,month:curMonth+1}).then(rows=>{rows.forEach(r=>{const sel=`.editable[data-name="${r.name}"][data-day="${r.day}"]`;const cell=gridEl.querySelector(sel);if(cell){cell.textContent=r.value||"";cell.classList.remove('code-U','code-AA','code-AZA','code-GV','code-LG','code-PE');if(r.value==='U')cell.classList.add('code-U');if(r.value==='AA')cell.classList.add('code-AA');if(r.value==='AZA')cell.classList.add('code-AZA');if(r.value==='GV')cell.classList.add('code-GV');if(r.value==='LG')cell.classList.add('code-LG');if(r.value==='PE')cell.classList.add('code-PE');}})}).catch(()=>{});
loadRemarks({year:curYear,month:curMonth+1}).then(t=>{if(typeof t==='string')remarksTA.value=t}).catch(()=>{});
loadDayRemarks({year:curYear,month:curMonth+1}).then(map=>{for(const [day,text] of Object.entries(map||{})){const c=gridEl.querySelector(`.day-remark-cell[data-day="${day}"]`);if(c)c.textContent=text||''}}).catch(()=>{});
}
gridEl.addEventListener('click',e=>{const th=e.target.closest('th');if(!th)return;const dnum=th.querySelector('.daynum');if(!dnum)return;const idx=Array.from(th.parentElement.children).indexOf(th);const day=idx;if(!day)return;const cur=(gridEl.querySelector(`.day-remark-cell[data-day="${day}"]`)?.textContent||'').trim();const t=prompt(`Bemerkung für Tag ${day}:`,cur);if(t===null)return;const cell=gridEl.querySelector(`.day-remark-cell[data-day="${day}"]`);if(cell)cell.textContent=t;saveDayRemark({year:curYear,month:curMonth+1,day,text:t}).catch(console.warn)});
function paintCell(td,code){if(td.dataset.name!==myName){toast('Nur in deiner Zeile eintragbar');return}if(code==='ATZA')code='AZA';td.textContent=(code==='X')?'':code;td.classList.remove('code-U','code-AA','code-AZA','code-GV','code-LG','code-PE');if(code==='U')td.classList.add('code-U');if(code==='AA')td.classList.add('code-AA');if(code==='AZA')td.classList.add('code-AZA');if(code==='GV')td.classList.add('code-GV');if(code==='LG')td.classList.add('code-LG');if(code==='PE')td.classList.add('code-PE');const day=+td.dataset.day;saveCell({year:curYear,month:curMonth+1,day,name:myName,value:(code==='X')?'':code}).catch(console.warn)}
gridEl.addEventListener('click',e=>{const td=e.target.closest('td.editable');if(!td)return;if(selectedCode){paintCell(td,selectedCode);return}});
gridEl.addEventListener('mousedown',e=>{const td=e.target.closest('td.editable');if(!td||!selectedCode)return;isPainting=true;td.classList.add('painting');paintCell(td,selectedCode)});
gridEl.addEventListener('mouseover',e=>{if(!isPainting||!selectedCode)return;const td=e.target.closest('td.editable');if(!td)return;td.classList.add('painting');paintCell(td,selectedCode)});
document.addEventListener('mouseup',()=>{if(isPainting){gridEl.querySelectorAll('td.painting').forEach(td=>td.classList.remove('painting'));isPainting=false}});
document.querySelectorAll('.legend-btn').forEach(btn=>{btn.addEventListener('click',()=>{if(btn.classList.contains('active')){btn.classList.remove('active');selectedCode=null;return}document.querySelectorAll('.legend-btn').forEach(b=>b.classList.remove('active'));btn.classList.add('active');selectedCode=btn.dataset.code;toast(`Modus: ${selectedCode} (nur Zeile: ${meSelect.value})`)})});
prevBtn.onclick=()=>{if(curMonth===0){curMonth=11;curYear--}else curMonth--;render()};nextBtn.onclick=()=>{if(curMonth===11){curMonth=0;curYear++}else curMonth++;render()};monthSelect.onchange=()=>{curMonth=+monthSelect.value;render()};yearSelect.onchange=()=>{curYear=+yearSelect.value;render()};
for(let y=YEAR_START;y<=YEAR_END;y++){const o=document.createElement('option');o.value=y;o.textContent=y;yearSelect.appendChild(o)}for(let m=0;m<12;m++){const o=document.createElement('option');o.value=m;o.textContent=MONTHS_DE[m];monthSelect.appendChild(o)}yearSelect.value=curYear;monthSelect.value=curMonth;
if('serviceWorker'in navigator){navigator.serviceWorker.register('sw.js')}render();